# Generated by Django 3.0.5 on 2020-04-21 13:47

from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VnfPkgInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vnfdId', models.TextField(blank=True, null=True)),
                ('vnfProvider', models.TextField(blank=True, null=True)),
                ('vnfProductName', models.TextField(blank=True, null=True)),
                ('vnfSoftwareVersion', models.TextField(blank=True, null=True)),
                ('vnfdVersion', models.TextField(blank=True, null=True)),
                ('onboardingState', django_mysql.models.EnumField(choices=[('CREATED', 'CREATED'), ('UPLOADING ', 'UPLOADING '), ('PROCESSING ', 'PROCESSING '), ('ONBOARDED', 'ONBOARDED')], default='CREATED')),
                ('operationalState', django_mysql.models.EnumField(choices=[('ENABLED', 'ENABLED'), ('DISABLED', 'DISABLED')], default='DISABLED')),
                ('usageState', django_mysql.models.EnumField(choices=[('IN_USE', 'IN_USE'), ('NOT_IN_USE', 'NOT_IN_USE')], default='NOT_IN_USE')),
                ('userDefinedData', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'VnfPkgInfo',
            },
        ),
        migrations.CreateModel(
            name='VnfPkgInfoLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_self', models.URLField()),
                ('vnfd', models.URLField(blank=True, null=True)),
                ('packageContent', models.URLField()),
                ('_links', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vnf_package_info_fk_links', to='vnfPackage.VnfPkgInfo')),
            ],
            options={
                'db_table': 'VnfPkgInfoLink',
            },
        ),
        migrations.CreateModel(
            name='VnfPackageSoftwareImageInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('provider', models.TextField()),
                ('version', models.TextField()),
                ('containerFormat', django_mysql.models.EnumField(choices=[('AKI', 'AKI'), ('AMI', 'AMI'), ('ARI', 'ARI'), ('BARE', 'BARE'), ('DOCKER', 'DOCKER'), ('OVA', 'OVA'), ('OVF', 'OVF')], default='DOCKER')),
                ('diskFormat', django_mysql.models.EnumField(choices=[('AKI', 'AKI'), ('AMI', 'AMI'), ('ARI', 'ARI'), ('ISO', 'ISO'), ('QCOW2', 'QCOW2'), ('RAW', 'RAW'), ('VDI', 'VDI'), ('VHD', 'VHD'), ('VHDX', 'VHDX'), ('VMDK', 'VMDK')], default='RAW')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('minDisk', models.PositiveIntegerField()),
                ('minRam', models.PositiveIntegerField()),
                ('size', models.PositiveIntegerField()),
                ('userMetadata', models.TextField(blank=True, null=True)),
                ('imagePath', models.TextField()),
                ('vnf_package_info_fk_software_image_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vnf_package_info_fk_software_image_info', to='vnfPackage.VnfPkgInfo')),
            ],
            options={
                'db_table': 'VnfPackageSoftwareImageInfo',
            },
        ),
        migrations.CreateModel(
            name='VnfPackageArtifactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artifactPath', models.TextField(blank=True, null=True)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('vnf_package_info_fk_artifact_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vnf_package_info_fk_artifact_info', to='vnfPackage.VnfPkgInfo')),
            ],
            options={
                'db_table': 'VnfPackageArtifactInfo',
            },
        ),
        migrations.CreateModel(
            name='Checksum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.TextField()),
                ('hash', models.TextField()),
                ('vnf_package_artifact_info_fk_checksum', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vnf_package_artifact_info_fk_checksum', to='vnfPackage.VnfPackageArtifactInfo')),
                ('vnf_package_info_fk_checksum', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vnf_package_info_fk_checksum', to='vnfPackage.VnfPkgInfo')),
                ('vnf_package_software_image_fk_checksum', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vnf_package_software_image_fk_checksum', to='vnfPackage.VnfPackageSoftwareImageInfo')),
            ],
            options={
                'db_table': 'Checksum',
            },
        ),
    ]
